var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,"name",{value,configurable:!0});import{r as reactExports,j as jsxRuntimeExports,_ as __,b as joinClassNames,N as NaverMap,g as getCenter,M as Marker,l as l10nHelper,c as createRoot}from"./NaverMap-8e51bd0d.js";import{D as Description,N as Nonce}from"./Nonce-e2623a32.js";let indoc,offset,output,stack;const tokenizer=/<(\/)?(\w+)\s*(\/)?>/g;function createFrame(element,tokenStart,tokenLength,prevOffset,leadingTextStart){return{element,tokenStart,tokenLength,prevOffset,leadingTextStart,children:[]}}__name(createFrame,"createFrame");const createInterpolateElement=__name((interpolatedString,conversionMap)=>{if(indoc=interpolatedString,offset=0,output=[],stack=[],tokenizer.lastIndex=0,!isValidConversionMap(conversionMap))throw new TypeError("The conversionMap provided is not valid. It must be an object with values that are React Elements");do;while(proceed(conversionMap));return reactExports.createElement(reactExports.Fragment,null,...output)},"createInterpolateElement"),isValidConversionMap=__name(conversionMap=>{const isObject=typeof conversionMap=="object",values=isObject&&Object.values(conversionMap);return isObject&&values.length&&values.every(element=>reactExports.isValidElement(element))},"isValidConversionMap");function proceed(conversionMap){const next=nextToken(),[tokenType,name,startOffset,tokenLength]=next,stackDepth=stack.length,leadingTextStart=startOffset>offset?offset:null;if(!conversionMap[name])return addText(),!1;switch(tokenType){case"no-more-tokens":if(stackDepth!==0){const{leadingTextStart:stackLeadingText,tokenStart}=stack.pop();output.push(indoc.substr(stackLeadingText,tokenStart))}return addText(),!1;case"self-closed":return stackDepth===0?(leadingTextStart!==null&&output.push(indoc.substr(leadingTextStart,startOffset-leadingTextStart)),output.push(conversionMap[name]),offset=startOffset+tokenLength,!0):(addChild(createFrame(conversionMap[name],startOffset,tokenLength)),offset=startOffset+tokenLength,!0);case"opener":return stack.push(createFrame(conversionMap[name],startOffset,tokenLength,startOffset+tokenLength,leadingTextStart)),offset=startOffset+tokenLength,!0;case"closer":if(stackDepth===1)return closeOuterElement(startOffset),offset=startOffset+tokenLength,!0;const stackTop=stack.pop(),text=indoc.substr(stackTop.prevOffset,startOffset-stackTop.prevOffset);stackTop.children.push(text),stackTop.prevOffset=startOffset+tokenLength;const frame=createFrame(stackTop.element,stackTop.tokenStart,stackTop.tokenLength,startOffset+tokenLength);return frame.children=stackTop.children,addChild(frame),offset=startOffset+tokenLength,!0;default:return addText(),!1}}__name(proceed,"proceed");function nextToken(){const matches=tokenizer.exec(indoc);if(matches===null)return["no-more-tokens"];const startedAt=matches.index,[match,isClosing,name,isSelfClosed]=matches,length=match.length;return isSelfClosed?["self-closed",name,startedAt,length]:isClosing?["closer",name,startedAt,length]:["opener",name,startedAt,length]}__name(nextToken,"nextToken");function addText(){const length=indoc.length-offset;length!==0&&output.push(indoc.substr(offset,length))}__name(addText,"addText");function addChild(frame){const{element,tokenStart,tokenLength,prevOffset,children}=frame,parent=stack[stack.length-1],text=indoc.substr(parent.prevOffset,tokenStart-parent.prevOffset);text&&parent.children.push(text),parent.children.push(reactExports.cloneElement(element,null,...children)),parent.prevOffset=prevOffset||tokenStart+tokenLength}__name(addChild,"addChild");function closeOuterElement(endOffset){const{element,leadingTextStart,prevOffset,tokenStart,children}=stack.pop(),text=endOffset?indoc.substr(prevOffset,endOffset-prevOffset):indoc.substr(prevOffset);text&&children.push(text),leadingTextStart!==null&&output.push(indoc.substr(leadingTextStart,tokenStart-leadingTextStart)),output.push(reactExports.cloneElement(element,null,...children))}__name(closeOuterElement,"closeOuterElement");const createInterpolateElement$1=createInterpolateElement;function ControlButtons(props){const{onClickAdd,onClickRemove}=props;return jsxRuntimeExports.jsxs("div",{className:"control-buttons",children:[jsxRuntimeExports.jsx("button",{className:"button",onClick:()=>onClickRemove&&onClickRemove(),title:__("Exclude","shoplic-integration-for-naver-map"),type:"button",children:"◀"}),jsxRuntimeExports.jsx("button",{className:"button",onClick:()=>onClickAdd&&onClickAdd(),title:__("Include","shoplic-integration-for-naver-map"),type:"button",children:"▶"})]})}__name(ControlButtons,"ControlButtons");function formatMapLocation(mapLocation){let output2=mapLocation.title;return mapLocation.address&&(output2+=` (${mapLocation.address})`),output2}__name(formatMapLocation,"formatMapLocation");function LocationsList(props){const{locations,className,label,name,onChange,selected}=props;return jsxRuntimeExports.jsxs("div",{className:`${joinClassNames("locations-list-wrap",className)}`,children:[jsxRuntimeExports.jsx("h3",{className:"label",children:label}),jsxRuntimeExports.jsx("select",{className:`${joinClassNames("locations-list",className)}`,multiple:!0,name,onChange:e=>{const selected2=[];for(const option of e.target.selectedOptions){const value=parseInt(option.value);isNaN(value)||selected2.push(value)}onChange&&onChange(selected2)},value:[...(selected==null?void 0:selected.values())??[]].map(value=>value.toString()),children:locations==null?void 0:locations.map(mapLocation=>jsxRuntimeExports.jsx("option",{title:formatMapLocation(mapLocation),value:mapLocation.id,children:formatMapLocation(mapLocation)},mapLocation.id))})]})}__name(LocationsList,"LocationsList");function LocationSelector(props){const{locations:propLocations,onChange,values:propValues}=props,[allLocations,setAllLocations]=reactExports.useState(new Set),[selectedLocations,setSelectedLocations]=reactExports.useState(new Set);return jsxRuntimeExports.jsxs("div",{className:"location-selector-wrap",children:[jsxRuntimeExports.jsx(LocationsList,{className:"all-locations",label:__("Available locations","shoplic-integration-for-naver-map"),locations:propLocations.filter(location=>!propValues.has(location.id)),onChange:values=>{setAllLocations(new Set(values))},selected:allLocations}),jsxRuntimeExports.jsx(ControlButtons,{onClickAdd:()=>{const newValues=new Set(propValues);allLocations.forEach(id=>{newValues.has(id)||newValues.add(id)}),onChange(newValues),setAllLocations(new Set)},onClickRemove:()=>{const newValues=new Set(propValues);selectedLocations.forEach(id=>{newValues.has(id)&&newValues.delete(id)}),onChange(newValues),setSelectedLocations(new Set)}}),jsxRuntimeExports.jsx(LocationsList,{className:"selected-locations",label:__("Selected location","shoplic-integration-for-naver-map"),locations:propLocations.filter(location=>propValues.has(location.id)),onChange:values=>{setSelectedLocations(new Set(values))},selected:selectedLocations})]})}__name(LocationSelector,"LocationSelector");function EditMap(props){const[locations,setLocations]=reactExports.useState(new Set(props.data.locations)),[map,setMap]=reactExports.useState(null);return jsxRuntimeExports.jsxs("div",{id:"edit-map-wrap",children:[jsxRuntimeExports.jsx(NaverMap,{id:"edit-map",className:`naver-map edit-map edit-map-${props.postId}`,mapOptions:{center:getCenter(props.data.allLocations.map(location=>location.coord)),disableKineticPan:!1,tileTransition:!0,zoom:10},ref:_map=>setMap(()=>_map),style:{height:"480px"},children:map&&props.data.allLocations.filter(location=>locations.has(location.id)).map(location=>jsxRuntimeExports.jsx(Marker,{markerOptions:{map,position:location.coord}},location.id))}),jsxRuntimeExports.jsx(LocationSelector,{locations:props.data.allLocations,onChange:values=>{setLocations(values)},values:locations}),jsxRuntimeExports.jsx(Description,{children:createInterpolateElement$1(__("<kbd>Ctrl</kbd> 키를 눌러 복수의 항목을 선택할 수 있습니다.","naver_maps"),{kbd:jsxRuntimeExports.jsx("kbd",{})})}),[...locations.values()].map((location,idx)=>jsxRuntimeExports.jsx("input",{id:`map-locations-${idx}`,name:"nm_map_locations[]",type:"hidden",defaultValue:location},idx)),jsxRuntimeExports.jsx(Nonce,{id:"nm-map-nonce",name:"nm_map_nonce",defaultValue:props.nonce})]})}__name(EditMap,"EditMap");const{data,nonce,post_id}=nmEditMap;console.log("nmEditMap",nmEditMap);const root=document.getElementById("nm-edit-map");root?(l10nHelper("shoplic-integration-for-naver-map"),createRoot(root).render(jsxRuntimeExports.jsx(reactExports.StrictMode,{children:jsxRuntimeExports.jsx(EditMap,{data,nonce,postId:parseInt(post_id)})}))):console.error("#nm-edit-map not found!");
//# sourceMappingURL=edit-map-75c77260.js.map
